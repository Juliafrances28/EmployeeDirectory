[{"/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/index.js":"1","/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/App.js":"2","/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/components/Col.js":"3","/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/components/Row.js":"4","/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/components/SearchForm.js":"5","/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/components/Card.js":"6","/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/components/ Detail.js":"7","/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/components/Container.js":"8","/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/utils/API.js":"9","/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/components/ombdContainer.js":"10"},{"size":193,"mtime":1611532201449,"results":"11","hashOfConfig":"12"},{"size":152,"mtime":1611546070077,"results":"13","hashOfConfig":"12"},{"size":469,"mtime":1611532201445,"results":"14","hashOfConfig":"12"},{"size":159,"mtime":1611532201448,"results":"15","hashOfConfig":"12"},{"size":600,"mtime":1611533318802,"results":"16","hashOfConfig":"12"},{"size":279,"mtime":1611532201445,"results":"17","hashOfConfig":"12"},{"size":481,"mtime":1611701813588,"results":"18","hashOfConfig":"12"},{"size":177,"mtime":1611532201446,"results":"19","hashOfConfig":"12"},{"size":147,"mtime":1611544040451,"results":"20","hashOfConfig":"12"},{"size":2560,"mtime":1611676618904,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"edm6ef",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/index.js",[],["45","46"],"/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/App.js",[],"/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/components/Col.js",[],"/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/components/Row.js",[],"/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/components/SearchForm.js",[],"/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/components/Card.js",[],"/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/components/ Detail.js",[],"/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/components/Container.js",[],"/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/utils/API.js",["47"],"import axios from \"axios\";\n\nexport default {\n  getRandomUser: function () {\n    return axios.get(\"https://randomuser.me/api/?results=20\");\n  },\n};\n","/Users/juliahoran/Desktop/rutgers/homework/EmployeeDirectory/src/components/ombdContainer.js",["48","49"],"import React, { Component } from \"react\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Col from \"./Col\";\nimport Card from \"./Card\";\nimport SearchForm from \"./SearchForm\";\nimport Detail from \"./ Detail\";\nimport API from \"../utils/API\";\n\nclass OmdbContainer extends Component {\n  state = {\n    result: [],\n    emplist: [],\n    search: \"\",\n  };\n\n  // When this component mounts, search for the employees\n  componentDidMount() {\n    this.loadRandomEmp(\"John\");\n  }\n  loadRandomEmp = (query) => {\n    API.getRandomUser(query)\n      .then((res) => {\n        console.log(res);\n        this.setState({ result: res.data.results });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  emplist = (id) => {\n    // Filter this.state.emplist for employees\n    const employees = this.state.employees.filter();\n    // Set this.state.employees equal to the new employee array\n    this.setState({ employees });\n  };\n\n  handleInputChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    this.setState({\n      [name]: value,\n    });\n    this.setState({ search: value });\n  };\n\n  // When the form is submitted, search the OMDB API for the value of `this.state.search`\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    console.log(this.state.result);\n    // this.getRandomUser (this.state.results);\n  };\n\n  render() {\n    const employees = this.state.result\n      .filter((data) => {\n        if (this.state.search == \"\") {\n          return data;\n        } else if (\n          data.name.first\n            .toLowerCase()\n            .includes(this.state.search.toLowerCase())\n        ) {\n          return data;\n        }\n      })\n      .map((data) => {\n        return <Detail listE={data} />;\n      });\n\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-8\">\n            <Card\n              heading={\n                this.state.result.Title || \"Search for a particular employee\"\n              }\n            >\n              {employees.length > 0 ? (\n                employees\n              ) : (\n                <h3>No Results to Display</h3>\n              )}\n            </Card>\n          </Col>\n          <Col size=\"md-4\">\n            <Card heading=\"Search\">\n              <SearchForm\n                value={this.state.search}\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n              />\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default OmdbContainer;\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":3,"column":1,"nodeType":"56","endLine":7,"endColumn":3},{"ruleId":"57","severity":1,"message":"58","line":55,"column":22,"nodeType":"59","messageId":"60","endLine":55,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":56,"column":31,"nodeType":"63","messageId":"64","endLine":56,"endColumn":33},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]